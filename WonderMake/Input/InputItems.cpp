#include "pch.h"

#include "InputItems.h"

#include <GLFW/glfw3.h>

constexpr i32 InputUtility::GetGlfwKey(const EKeyboardKey aKey) noexcept
{
	switch (aKey)
	{
	case EKeyboardKey::A:
		return GLFW_KEY_A;
	case EKeyboardKey::B:
		return GLFW_KEY_B;
	case EKeyboardKey::C:
		return GLFW_KEY_C;
	case EKeyboardKey::D:
		return GLFW_KEY_D;
	case EKeyboardKey::E:
		return GLFW_KEY_E;
	case EKeyboardKey::F:
		return GLFW_KEY_F;
	case EKeyboardKey::G:
		return GLFW_KEY_G;
	case EKeyboardKey::H:
		return GLFW_KEY_H;
	case EKeyboardKey::I:
		return GLFW_KEY_I;
	case EKeyboardKey::J:
		return GLFW_KEY_J;
	case EKeyboardKey::K:
		return GLFW_KEY_K;
	case EKeyboardKey::L:
		return GLFW_KEY_L;
	case EKeyboardKey::M:
		return GLFW_KEY_M;
	case EKeyboardKey::N:
		return GLFW_KEY_N;
	case EKeyboardKey::O:
		return GLFW_KEY_O;
	case EKeyboardKey::P:
		return GLFW_KEY_P;
	case EKeyboardKey::Q:
		return GLFW_KEY_Q;
	case EKeyboardKey::R:
		return GLFW_KEY_R;
	case EKeyboardKey::S:
		return GLFW_KEY_S;
	case EKeyboardKey::T:
		return GLFW_KEY_T;
	case EKeyboardKey::U:
		return GLFW_KEY_U;
	case EKeyboardKey::V:
		return GLFW_KEY_V;
	case EKeyboardKey::W:
		return GLFW_KEY_W;
	case EKeyboardKey::X:
		return GLFW_KEY_X;
	case EKeyboardKey::Y:
		return GLFW_KEY_Y;
	case EKeyboardKey::Z:
		return GLFW_KEY_Z;
	case EKeyboardKey::Zero:
		return GLFW_KEY_0;
	case EKeyboardKey::One:
		return GLFW_KEY_1;
	case EKeyboardKey::Two:
		return GLFW_KEY_2;
	case EKeyboardKey::Three:
		return GLFW_KEY_3;
	case EKeyboardKey::Four:
		return GLFW_KEY_4;
	case EKeyboardKey::Five:
		return GLFW_KEY_5;
	case EKeyboardKey::Six:
		return GLFW_KEY_6;
	case EKeyboardKey::Seven:
		return GLFW_KEY_7;
	case EKeyboardKey::Eight:
		return GLFW_KEY_8;
	case EKeyboardKey::Nine:
		return GLFW_KEY_9;
	case EKeyboardKey::Space:
		return GLFW_KEY_SPACE;
	case EKeyboardKey::Enter:
		return GLFW_KEY_ENTER;
	case EKeyboardKey::Escape:
		return GLFW_KEY_ESCAPE;
	case EKeyboardKey::Backspace:
		return GLFW_KEY_BACKSPACE;
	case EKeyboardKey::Comma:
		return GLFW_KEY_COMMA;
	case EKeyboardKey::Period:
		return GLFW_KEY_PERIOD;
	case EKeyboardKey::Shift:
		return GLFW_KEY_LEFT_SHIFT;
	case EKeyboardKey::Alt:
		return GLFW_KEY_LEFT_ALT;
	case EKeyboardKey::Ctrl:
		return GLFW_KEY_LEFT_CONTROL;
	case EKeyboardKey::Tab:
		return GLFW_KEY_TAB;
	case EKeyboardKey::Left:
		return GLFW_KEY_LEFT;
	case EKeyboardKey::Right:
		return GLFW_KEY_RIGHT;
	case EKeyboardKey::Up:
		return GLFW_KEY_UP;
	case EKeyboardKey::Down:
		return GLFW_KEY_DOWN;
	case EKeyboardKey::Insert:
		return GLFW_KEY_INSERT;
	case EKeyboardKey::Home:
		return GLFW_KEY_HOME;
	case EKeyboardKey::Delete:
		return GLFW_KEY_DELETE;
	case EKeyboardKey::End:
		return GLFW_KEY_END;
	case EKeyboardKey::PageUp:
		return GLFW_KEY_PAGE_UP;
	case EKeyboardKey::PageDown:
		return GLFW_KEY_PAGE_DOWN;
	case EKeyboardKey::Break:
		return GLFW_KEY_PAUSE;
	case EKeyboardKey::ScrollLock:
		return GLFW_KEY_SCROLL_LOCK;
	case EKeyboardKey::PrintScreen:
		return GLFW_KEY_PRINT_SCREEN;
	case EKeyboardKey::Tilde:
		return GLFW_KEY_GRAVE_ACCENT;
	case EKeyboardKey::CapsLock:
		return GLFW_KEY_CAPS_LOCK;
	default:
		return -1;
	}
}
